// Generated by Dagger (https://dagger.dev).
package com.recruitmentapplication.presentation.schedulelist;

import com.recruitmentapplication.domain.usecase.GetScheduleUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ScheduleListViewModel_Factory implements Factory<ScheduleListViewModel> {
  private final Provider<GetScheduleUseCase> scheduleUseCaseProvider;

  public ScheduleListViewModel_Factory(Provider<GetScheduleUseCase> scheduleUseCaseProvider) {
    this.scheduleUseCaseProvider = scheduleUseCaseProvider;
  }

  @Override
  public ScheduleListViewModel get() {
    return newInstance(scheduleUseCaseProvider.get());
  }

  public static ScheduleListViewModel_Factory create(
      Provider<GetScheduleUseCase> scheduleUseCaseProvider) {
    return new ScheduleListViewModel_Factory(scheduleUseCaseProvider);
  }

  public static ScheduleListViewModel newInstance(GetScheduleUseCase scheduleUseCase) {
    return new ScheduleListViewModel(scheduleUseCase);
  }
}
