// Generated by Dagger (https://dagger.dev).
package com.recruitmentapplication.presentation.eventslist;

import com.recruitmentapplication.domain.usecase.GetEventUseCase;
import com.recruitmentapplication.presentation.DateTimeFormatter;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class EventsViewModel_Factory implements Factory<EventsViewModel> {
  private final Provider<GetEventUseCase> eventsUseCaseProvider;

  private final Provider<DateTimeFormatter> dateTimeFormatterProvider;

  public EventsViewModel_Factory(Provider<GetEventUseCase> eventsUseCaseProvider,
      Provider<DateTimeFormatter> dateTimeFormatterProvider) {
    this.eventsUseCaseProvider = eventsUseCaseProvider;
    this.dateTimeFormatterProvider = dateTimeFormatterProvider;
  }

  @Override
  public EventsViewModel get() {
    return newInstance(eventsUseCaseProvider.get(), dateTimeFormatterProvider.get());
  }

  public static EventsViewModel_Factory create(Provider<GetEventUseCase> eventsUseCaseProvider,
      Provider<DateTimeFormatter> dateTimeFormatterProvider) {
    return new EventsViewModel_Factory(eventsUseCaseProvider, dateTimeFormatterProvider);
  }

  public static EventsViewModel newInstance(GetEventUseCase eventsUseCase,
      DateTimeFormatter dateTimeFormatter) {
    return new EventsViewModel(eventsUseCase, dateTimeFormatter);
  }
}
